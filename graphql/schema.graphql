"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID! @eq): User! @find
    board(id: ID! @eq): Board! @find
    userBoards(owner_id: Int! @where):[Board!]! @all @can(ability:"viewBoards",find:owner_id,model:"App\\Models\\User")
    me: User @auth
}

type Mutation {
    addCard(input:addCardInput! @spread): Card! @create @can(ability:"createCard",model:"App\\Models\\CardList",find:"list_id")
    deleteCard(id: ID!): Card! @delete @can(ability:"delete",find:id)
    updateCard(id: ID!,title: String): Card! @update @can(ability:"update",find:id)

    createBoard(input:createBoardInput! @spread): Board! @guard

    login(email:String @rules(apply:["required","string"]),password:String @rules(apply:["required","string"])): User!
    logout: User @guard
    register(input:registerInput! @spread): User! @event(dispatch: "Illuminate\\Auth\\Events\\Registered")

}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Board {
    id: ID!
    title: String!
    color: String!
    owner: User! @belongsTo
    lists: [CardList!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Card {
    id: ID!
    title: String!
    order: Int!
    owner: User! @belongsTo
    list: CardList! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type CardList {
    id: ID!
    title: String!
    board: Board! @belongsTo
    cards: [Card!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

input addCardInput {
    title: String!
    list_id: ID!
    owner_id: ID!
    order: Int!
}

input createBoardInput {
    title: String @rules(apply:["required", "string", "max:255"])
    color: String @rules(apply:["required", "string", "max:255"])
}

input registerInput{
    name:String @rules(apply:["required", "string", "max:255"]),
    email:String  @rules(apply:["required", "string", "email", "max:255", "unique:users,email"]),
    password:String @rules(apply:["required", "string", "min:8", "confirmed"]),
    password_confirmation:String
}
