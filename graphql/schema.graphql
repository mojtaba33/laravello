"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID! @eq): User! @find
    board(id: ID! @eq): Board! @find
}

type Mutation {
    addCard(input:addCardInput! @spread): Card! @create
    deleteCard(id: ID!): Card! @delete
    updateCard(id: ID!,title: String): Card! @update

    login(email:String @rules(apply:["required","string"]),password:String @rules(apply:["required","string"])): User!
    logout: User @guard
    register(
        name:String @rules(apply:["required","string","min:2"]),
        email:String @rules(apply:["required","string","max:255","email","unique:users"]),
        password:String @rules(apply:["required","string","min:8","confirmed"])
        ): User! @create
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Board {
    id: ID!
    title: String!
    color: String!
    owner: User! @belongsTo
    lists: [CardList!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Card {
    id: ID!
    title: String!
    order: Int!
    owner: User! @belongsTo
    list: CardList! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type CardList {
    id: ID!
    title: String!
    board: Board! @belongsTo
    cards: [Card!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

input addCardInput {
    title: String!
    list_id: ID!
    owner_id: ID!
    order: Int!
}
